{"ast":null,"code":"var _jsxFileName = \"/Users/razvan.bompa/Documents/MERN/client/src/user/pages/Users.js\";\nimport React, { useEffect, useState } from 'react';\nimport UsersList from '../components/UsersList';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\n\nconst Users = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n  const [loadedUsers, setLoadedUsers] = useState();\n  useEffect(() => {\n    setIsLoading(true);\n\n    const sendRequest = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/users');\n        const responseData = await response.json();\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n\n        setLoadedUsers(responseData.users);\n        setIsLoading(false);\n      } catch (err) {\n        setIsLoading(false);\n        setError(err.message);\n      }\n    };\n  }, []);\n\n  const errorHandler = () => setError(null);\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(UsersList, {\n    items: loadedUsers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Users;","map":{"version":3,"names":["React","useEffect","useState","UsersList","ErrorModal","LoadingSpinner","Users","isLoading","setIsLoading","error","setError","loadedUsers","setLoadedUsers","sendRequest","response","fetch","responseData","json","ok","Error","message","users","err","errorHandler"],"sources":["/Users/razvan.bompa/Documents/MERN/client/src/user/pages/Users.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport UsersList from '../components/UsersList';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\n\nconst Users = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n  const [loadedUsers, setLoadedUsers] = useState();\n\n  useEffect(() => {\n    setIsLoading(true);\n    const sendRequest = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/users');\n        const responseData = await response.json();\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n        setLoadedUsers(responseData.users);\n        setIsLoading(false);\n      } catch (err) {\n        setIsLoading(false);\n        setError(err.message);\n      }\n    };\n  }, []);\n\n  const errorHandler = () => setError(null);\n\n  return (\n    <React.Fragment>\n      <UsersList items={loadedUsers} />\n    </React.Fragment>\n  );\n};\n\nexport default Users;\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,UAAP,MAAuB,+CAAvB;AACA,OAAOC,cAAP,MAA2B,mDAA3B;;AAEA,MAAMC,KAAK,GAAG,MAAM;EAClB,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;EACA,MAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,EAAlC;EACA,MAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,EAA9C;EAEAD,SAAS,CAAC,MAAM;IACdO,YAAY,CAAC,IAAD,CAAZ;;IACA,MAAMK,WAAW,GAAG,YAAY;MAC9B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAD,CAA5B;QACA,MAAMC,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAA3B;;QACA,IAAI,CAACH,QAAQ,CAACI,EAAd,EAAkB;UAChB,MAAM,IAAIC,KAAJ,CAAUH,YAAY,CAACI,OAAvB,CAAN;QACD;;QACDR,cAAc,CAACI,YAAY,CAACK,KAAd,CAAd;QACAb,YAAY,CAAC,KAAD,CAAZ;MACD,CARD,CAQE,OAAOc,GAAP,EAAY;QACZd,YAAY,CAAC,KAAD,CAAZ;QACAE,QAAQ,CAACY,GAAG,CAACF,OAAL,CAAR;MACD;IACF,CAbD;EAcD,CAhBQ,EAgBN,EAhBM,CAAT;;EAkBA,MAAMG,YAAY,GAAG,MAAMb,QAAQ,CAAC,IAAD,CAAnC;;EAEA,oBACE,oBAAC,KAAD,CAAO,QAAP;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,SAAD;IAAW,KAAK,EAAEC,WAAlB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,CADF;AAKD,CA9BD;;AAgCA,eAAeL,KAAf"},"metadata":{},"sourceType":"module"}