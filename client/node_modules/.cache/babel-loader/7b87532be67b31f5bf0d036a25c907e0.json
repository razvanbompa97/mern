{"ast":null,"code":"var _jsxFileName = \"/Users/razvan.bompa/Documents/MERN/client/src/places/pages/NewPlace.js\";\nimport React, { useCallback, useReducer } from 'react';\nimport Input from '../../shared/components/FormElements/Input';\nimport { VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from '../../shared/util/validators';\nimport './NewPlace.css';\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n\n      for (const inputId in state.inputs) {\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n\n    default:\n      return state;\n  }\n};\n\nconst NewPlace = () => {\n  useReducer(formReducer, {\n    inputs: {\n      title: {\n        value: '',\n        isValid: false\n      },\n      description: {\n        value: '',\n        isValid: false\n      }\n    },\n    isValid: false\n  });\n  const titleInputHandler = useCallback((id, value, isValid) => {}, []);\n  const descriptionInputHandler = useCallback((id, value, isValid) => {}, []);\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"place-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    id: \"title\",\n    type: \"text\",\n    label: \"Title\",\n    element: \"input\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please enter a valid title\",\n    onInput: titleInputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"description\",\n    label: \"Description\",\n    element: \"textarea\",\n    validators: [VALIDATOR_MINLENGTH(5)],\n    errorText: \"Please enter a valid description (at least 5 characters).\",\n    onInput: descriptionInputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default NewPlace;","map":{"version":3,"names":["React","useCallback","useReducer","Input","VALIDATOR_MINLENGTH","VALIDATOR_REQUIRE","formReducer","state","action","type","formIsValid","inputId","inputs","isValid","NewPlace","title","value","description","titleInputHandler","id","descriptionInputHandler"],"sources":["/Users/razvan.bompa/Documents/MERN/client/src/places/pages/NewPlace.js"],"sourcesContent":["import React, { useCallback, useReducer } from 'react';\n\nimport Input from '../../shared/components/FormElements/Input';\nimport {\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_REQUIRE,\n} from '../../shared/util/validators';\nimport './NewPlace.css';\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n    default:\n      return state;\n  }\n};\n\nconst NewPlace = () => {\n  useReducer(formReducer, {\n    inputs: {\n      title: {\n        value: '',\n        isValid: false,\n      },\n      description: {\n        value: '',\n        isValid: false,\n      },\n    },\n    isValid: false,\n  });\n\n  const titleInputHandler = useCallback((id, value, isValid) => {}, []);\n  const descriptionInputHandler = useCallback((id, value, isValid) => {}, []);\n\n  return (\n    <form className=\"place-form\">\n      <Input\n        id=\"title\"\n        type=\"text\"\n        label=\"Title\"\n        element=\"input\"\n        validators={[VALIDATOR_REQUIRE()]}\n        errorText=\"Please enter a valid title\"\n        onInput={titleInputHandler}\n      />\n      <Input\n        id=\"description\"\n        label=\"Description\"\n        element=\"textarea\"\n        validators={[VALIDATOR_MINLENGTH(5)]}\n        errorText=\"Please enter a valid description (at least 5 characters).\"\n        onInput={descriptionInputHandler}\n      />\n    </form>\n  );\n};\n\nexport default NewPlace;\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,UAA7B,QAA+C,OAA/C;AAEA,OAAOC,KAAP,MAAkB,4CAAlB;AACA,SACEC,mBADF,EAEEC,iBAFF,QAGO,8BAHP;AAIA,OAAO,gBAAP;;AAEA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EACrC,QAAQA,MAAM,CAACC,IAAf;IACE,KAAK,cAAL;MACE,IAAIC,WAAW,GAAG,IAAlB;;MACA,KAAK,MAAMC,OAAX,IAAsBJ,KAAK,CAACK,MAA5B,EAAoC;QAClC,IAAID,OAAO,KAAKH,MAAM,CAACG,OAAvB,EAAgC;UAC9BD,WAAW,GAAGA,WAAW,IAAIF,MAAM,CAACK,OAApC;QACD,CAFD,MAEO;UACLH,WAAW,GAAGA,WAAW,IAAIH,KAAK,CAACK,MAAN,CAAaD,OAAb,EAAsBE,OAAnD;QACD;MACF;;IACH;MACE,OAAON,KAAP;EAXJ;AAaD,CAdD;;AAgBA,MAAMO,QAAQ,GAAG,MAAM;EACrBZ,UAAU,CAACI,WAAD,EAAc;IACtBM,MAAM,EAAE;MACNG,KAAK,EAAE;QACLC,KAAK,EAAE,EADF;QAELH,OAAO,EAAE;MAFJ,CADD;MAKNI,WAAW,EAAE;QACXD,KAAK,EAAE,EADI;QAEXH,OAAO,EAAE;MAFE;IALP,CADc;IAWtBA,OAAO,EAAE;EAXa,CAAd,CAAV;EAcA,MAAMK,iBAAiB,GAAGjB,WAAW,CAAC,CAACkB,EAAD,EAAKH,KAAL,EAAYH,OAAZ,KAAwB,CAAE,CAA3B,EAA6B,EAA7B,CAArC;EACA,MAAMO,uBAAuB,GAAGnB,WAAW,CAAC,CAACkB,EAAD,EAAKH,KAAL,EAAYH,OAAZ,KAAwB,CAAE,CAA3B,EAA6B,EAA7B,CAA3C;EAEA,oBACE;IAAM,SAAS,EAAC,YAAhB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,KAAD;IACE,EAAE,EAAC,OADL;IAEE,IAAI,EAAC,MAFP;IAGE,KAAK,EAAC,OAHR;IAIE,OAAO,EAAC,OAJV;IAKE,UAAU,EAAE,CAACR,iBAAiB,EAAlB,CALd;IAME,SAAS,EAAC,4BANZ;IAOE,OAAO,EAAEa,iBAPX;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,eAUE,oBAAC,KAAD;IACE,EAAE,EAAC,aADL;IAEE,KAAK,EAAC,aAFR;IAGE,OAAO,EAAC,UAHV;IAIE,UAAU,EAAE,CAACd,mBAAmB,CAAC,CAAD,CAApB,CAJd;IAKE,SAAS,EAAC,2DALZ;IAME,OAAO,EAAEgB,uBANX;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAVF,CADF;AAqBD,CAvCD;;AAyCA,eAAeN,QAAf"},"metadata":{},"sourceType":"module"}