{"ast":null,"code":"var _jsxFileName = \"/Users/razvan.bompa/Documents/MERN/client/src/user/pages/Auth.js\";\nimport React, { useState, useContext } from 'react';\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport Input from '../../shared/components/FormElements/Input';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { VALIDATOR_EMAIL, VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from '../../shared/util/validators';\nimport Card from '../../shared/components/UIElements/Card';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport './Auth.css';\n\nconst Auth = () => {\n  const auth = useContext(AuthContext);\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  } = useHttpClient();\n  const [formState, inputHandler, setFormData] = useForm({\n    email: {\n      value: '',\n      isValid: false\n    },\n    password: {\n      value: '',\n      isValid: false\n    }\n  }, false);\n\n  const authSubmitHandler = async event => {\n    event.preventDefault();\n\n    if (isLoginMode) {\n      try {\n        const response = await sendRequest('http://localhost:5000/api/users/login', 'POST', JSON.stringify({\n          email: formState.inputs.email.value,\n          password: formState.inputs.password.value\n        }), {\n          'Content-Type': 'application/json'\n        });\n        const responseData = await response.json();\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n\n        setIsLoading(false);\n        auth.login();\n      } catch (err) {\n        console.log(err);\n        setIsLoading(false);\n        setError(err.message || 'Somethin went wrong, please try again');\n      }\n    } else {\n      try {\n        const response = await fetch('http://localhost:5000/api/users/signup', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            name: formState.inputs.name.value,\n            email: formState.inputs.email.value,\n            password: formState.inputs.password.value\n          })\n        });\n        const responseData = await response.json();\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n\n        setIsLoading(false);\n        auth.login();\n      } catch (err) {\n        console.log(err);\n        setIsLoading(false);\n        setError(err.message || 'Somethin went wrong, please try again');\n      }\n    }\n  };\n\n  const switchModeHandler = () => {\n    if (!isLoginMode) {\n      setFormData({ ...formState.inputs,\n        name: undefined\n      }, formState.inputs.email.isValid && formState.inputs.password.isValid);\n    } else {\n      setFormData({ ...formState.inputs,\n        name: {\n          value: '',\n          isValid: false\n        }\n      }, false);\n    }\n\n    setIsLoginMode(prevMode => !prevMode);\n  };\n\n  const errorHandler = () => setError(null);\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ErrorModal, {\n    error: error,\n    onClear: errorHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Card, {\n    className: \"authentication\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }, isLoading && /*#__PURE__*/React.createElement(LoadingSpinner, {\n    asOverlay: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, \"Login Required\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: authSubmitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, !isLoginMode && /*#__PURE__*/React.createElement(Input, {\n    element: \"input\",\n    id: \"name\",\n    label: \"Name\",\n    type: \"text\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please enter a name\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"email\",\n    type: \"email\",\n    element: \"input\",\n    label: \"E-mail\",\n    validators: [VALIDATOR_EMAIL()],\n    errorText: \"Please enter a valid email adress.\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"password\",\n    type: \"password\",\n    element: \"input\",\n    label: \"Password\",\n    validators: [VALIDATOR_MINLENGTH(5)],\n    errorText: \"Please enter a valid password (min. 5 characters).\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    disabled: !formState.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 11\n    }\n  }, isLoginMode ? 'LOGIN' : 'SIGNUP')), /*#__PURE__*/React.createElement(Button, {\n    inverse: true,\n    onClick: switchModeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }\n  }, isLoginMode ? 'SWITCH TO SIGNUP' : 'SWITCH TO LOGIN')));\n};\n\nexport default Auth;","map":{"version":3,"names":["React","useState","useContext","Button","ErrorModal","LoadingSpinner","Input","useForm","useHttpClient","VALIDATOR_EMAIL","VALIDATOR_MINLENGTH","VALIDATOR_REQUIRE","Card","AuthContext","Auth","auth","isLoginMode","setIsLoginMode","isLoading","error","sendRequest","clearError","formState","inputHandler","setFormData","email","value","isValid","password","authSubmitHandler","event","preventDefault","response","JSON","stringify","inputs","responseData","json","ok","Error","message","setIsLoading","login","err","console","log","setError","fetch","method","headers","body","name","switchModeHandler","undefined","prevMode","errorHandler"],"sources":["/Users/razvan.bompa/Documents/MERN/client/src/user/pages/Auth.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\n\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport Input from '../../shared/components/FormElements/Input';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport {\n  VALIDATOR_EMAIL,\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_REQUIRE,\n} from '../../shared/util/validators';\nimport Card from '../../shared/components/UIElements/Card';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport './Auth.css';\n\nconst Auth = () => {\n  const auth = useContext(AuthContext);\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      email: {\n        value: '',\n        isValid: false,\n      },\n      password: {\n        value: '',\n        isValid: false,\n      },\n    },\n    false\n  );\n\n  const authSubmitHandler = async (event) => {\n    event.preventDefault();\n\n    if (isLoginMode) {\n      try {\n        const response = await sendRequest(\n          'http://localhost:5000/api/users/login',\n          'POST',\n          JSON.stringify({\n            email: formState.inputs.email.value,\n            password: formState.inputs.password.value,\n          }),\n          {\n            'Content-Type': 'application/json',\n          }\n        );\n\n        const responseData = await response.json();\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n        setIsLoading(false);\n        auth.login();\n      } catch (err) {\n        console.log(err);\n        setIsLoading(false);\n        setError(err.message || 'Somethin went wrong, please try again');\n      }\n    } else {\n      try {\n        const response = await fetch('http://localhost:5000/api/users/signup', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            name: formState.inputs.name.value,\n            email: formState.inputs.email.value,\n            password: formState.inputs.password.value,\n          }),\n        });\n\n        const responseData = await response.json();\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n        setIsLoading(false);\n        auth.login();\n      } catch (err) {\n        console.log(err);\n        setIsLoading(false);\n        setError(err.message || 'Somethin went wrong, please try again');\n      }\n    }\n  };\n\n  const switchModeHandler = () => {\n    if (!isLoginMode) {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: undefined,\n        },\n        formState.inputs.email.isValid && formState.inputs.password.isValid\n      );\n    } else {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: {\n            value: '',\n            isValid: false,\n          },\n        },\n        false\n      );\n    }\n\n    setIsLoginMode((prevMode) => !prevMode);\n  };\n\n  const errorHandler = () => setError(null);\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={errorHandler} />\n      <Card className=\"authentication\">\n        {isLoading && <LoadingSpinner asOverlay />}\n        <h2>Login Required</h2>\n        <hr />\n        <form onSubmit={authSubmitHandler}>\n          {!isLoginMode && (\n            <Input\n              element=\"input\"\n              id=\"name\"\n              label=\"Name\"\n              type=\"text\"\n              validators={[VALIDATOR_REQUIRE()]}\n              errorText=\"Please enter a name\"\n              onInput={inputHandler}\n            />\n          )}\n          <Input\n            id=\"email\"\n            type=\"email\"\n            element=\"input\"\n            label=\"E-mail\"\n            validators={[VALIDATOR_EMAIL()]}\n            errorText=\"Please enter a valid email adress.\"\n            onInput={inputHandler}\n          />\n          <Input\n            id=\"password\"\n            type=\"password\"\n            element=\"input\"\n            label=\"Password\"\n            validators={[VALIDATOR_MINLENGTH(5)]}\n            errorText=\"Please enter a valid password (min. 5 characters).\"\n            onInput={inputHandler}\n          />\n          <Button type=\"submit\" disabled={!formState.isValid}>\n            {isLoginMode ? 'LOGIN' : 'SIGNUP'}\n          </Button>\n        </form>\n        <Button inverse onClick={switchModeHandler}>\n          {isLoginMode ? 'SWITCH TO SIGNUP' : 'SWITCH TO LOGIN'}\n        </Button>\n      </Card>\n    </React.Fragment>\n  );\n};\n\nexport default Auth;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}