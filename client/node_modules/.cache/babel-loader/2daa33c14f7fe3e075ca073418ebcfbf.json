{"ast":null,"code":"var _jsxFileName = \"/Users/razvan.bompa/Documents/MERN/client/src/places/pages/UserPlaces.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport PlaceList from '../components/PlaceList';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\n\nconst UserPlaces = () => {\n  const [userPlaces, setUserPlaces] = useState();\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  } = useHttpClient();\n  const userId = useParams().userId;\n  useEffect(() => {\n    const fetchPlaces = async () => {\n      try {\n        const responseData = await sendRequest(`http://localhost:5000/api/places/user/${userId}`);\n        setUserPlaces(responseData.places);\n      } catch (err) {\n        console.log({\n          err\n        });\n\n        if (err.message === 'Could not find places for the provided user id') {\n          return;\n        }\n      }\n    };\n\n    fetchPlaces();\n  }, [sendRequest, userId]);\n\n  const placeDeletedHandler = deletedPlaceId => {\n    setUserPlaces(prevPlaces => prevPlaces.filter(place => place.id !== deletedPlaceId));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ErrorModal, {\n    error: error,\n    onClear: clearError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }), isLoading && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(LoadingSpinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  })), userPlaces && /*#__PURE__*/React.createElement(PlaceList, {\n    items: userPlaces,\n    onDeletePlace: placeDeletedHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default UserPlaces;","map":{"version":3,"names":["React","useEffect","useState","useParams","useHttpClient","PlaceList","ErrorModal","LoadingSpinner","UserPlaces","userPlaces","setUserPlaces","isLoading","error","sendRequest","clearError","userId","fetchPlaces","responseData","places","err","console","log","message","placeDeletedHandler","deletedPlaceId","prevPlaces","filter","place","id"],"sources":["/Users/razvan.bompa/Documents/MERN/client/src/places/pages/UserPlaces.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport PlaceList from '../components/PlaceList';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\n\nconst UserPlaces = () => {\n  const [userPlaces, setUserPlaces] = useState();\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const userId = useParams().userId;\n\n  useEffect(() => {\n    const fetchPlaces = async () => {\n      try {\n        const responseData = await sendRequest(\n          `http://localhost:5000/api/places/user/${userId}`\n        );\n\n        setUserPlaces(responseData.places);\n      } catch (err) {\n        console.log({ err });\n        if (err.message === 'Could not find places for the provided user id') {\n          return;\n        }\n      }\n    };\n\n    fetchPlaces();\n  }, [sendRequest, userId]);\n\n  const placeDeletedHandler = (deletedPlaceId) => {\n    setUserPlaces((prevPlaces) =>\n      prevPlaces.filter((place) => place.id !== deletedPlaceId)\n    );\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {isLoading && (\n        <div className=\"center\">\n          <LoadingSpinner />\n        </div>\n      )}\n      {userPlaces && (\n        <PlaceList items={userPlaces} onDeletePlace={placeDeletedHandler} />\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default UserPlaces;\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AAEA,SAASC,aAAT,QAA8B,8BAA9B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,UAAP,MAAuB,+CAAvB;AACA,OAAOC,cAAP,MAA2B,mDAA3B;;AAEA,MAAMC,UAAU,GAAG,MAAM;EACvB,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,EAA5C;EACA,MAAM;IAAES,SAAF;IAAaC,KAAb;IAAoBC,WAApB;IAAiCC;EAAjC,IAAgDV,aAAa,EAAnE;EACA,MAAMW,MAAM,GAAGZ,SAAS,GAAGY,MAA3B;EAEAd,SAAS,CAAC,MAAM;IACd,MAAMe,WAAW,GAAG,YAAY;MAC9B,IAAI;QACF,MAAMC,YAAY,GAAG,MAAMJ,WAAW,CACnC,yCAAwCE,MAAO,EADZ,CAAtC;QAIAL,aAAa,CAACO,YAAY,CAACC,MAAd,CAAb;MACD,CAND,CAME,OAAOC,GAAP,EAAY;QACZC,OAAO,CAACC,GAAR,CAAY;UAAEF;QAAF,CAAZ;;QACA,IAAIA,GAAG,CAACG,OAAJ,KAAgB,gDAApB,EAAsE;UACpE;QACD;MACF;IACF,CAbD;;IAeAN,WAAW;EACZ,CAjBQ,EAiBN,CAACH,WAAD,EAAcE,MAAd,CAjBM,CAAT;;EAmBA,MAAMQ,mBAAmB,GAAIC,cAAD,IAAoB;IAC9Cd,aAAa,CAAEe,UAAD,IACZA,UAAU,CAACC,MAAX,CAAmBC,KAAD,IAAWA,KAAK,CAACC,EAAN,KAAaJ,cAA1C,CADW,CAAb;EAGD,CAJD;;EAMA,oBACE,oBAAC,KAAD,CAAO,QAAP;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,UAAD;IAAY,KAAK,EAAEZ,KAAnB;IAA0B,OAAO,EAAEE,UAAnC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,EAEGH,SAAS,iBACR;IAAK,SAAS,EAAC,QAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,cAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,CAHJ,EAOGF,UAAU,iBACT,oBAAC,SAAD;IAAW,KAAK,EAAEA,UAAlB;IAA8B,aAAa,EAAEc,mBAA7C;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EARJ,CADF;AAaD,CA3CD;;AA6CA,eAAef,UAAf"},"metadata":{},"sourceType":"module"}