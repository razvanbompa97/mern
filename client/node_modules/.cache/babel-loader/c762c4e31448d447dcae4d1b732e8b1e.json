{"ast":null,"code":"var _jsxFileName = \"/Users/razvan.bompa/Documents/MERN/client/src/places/pages/NewPlace.js\";\nimport React, { useContext } from 'react';\nimport Button from '../../shared/components/FormElements/Button';\nimport Input from '../../shared/components/FormElements/Input';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from '../../shared/util/validators';\nimport './PlaceForm.css';\n\nconst NewPlace = () => {\n  const auth = useContext(AuthContext);\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  } = useHttpClient();\n  const [formState, inputHandler] = useForm({\n    title: {\n      value: '',\n      isValid: false\n    },\n    description: {\n      value: '',\n      isValid: false\n    },\n    address: {\n      value: '',\n      isValid: ''\n    }\n  }, false);\n\n  const placeSubmitHanlder = async event => {\n    event.preventDefault();\n\n    try {\n      await sendRequest('http://localhost:500/api/places', 'POST', JSON.stringify({\n        title: formState.inputs.title.value,\n        description: formState.inputs.description.value,\n        address: formState.inputs.address.value,\n        creator: auth.userId\n      })); //Redirect user\n    } catch (err) {}\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"place-form\",\n    onSubmit: placeSubmitHanlder,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    id: \"title\",\n    type: \"text\",\n    label: \"Title\",\n    element: \"input\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please enter a valid title.\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"description\",\n    label: \"Description\",\n    element: \"textarea\",\n    validators: [VALIDATOR_MINLENGTH(5)],\n    errorText: \"Please enter a valid description (at least 5 characters).\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"address\",\n    label: \"Address\",\n    element: \"input\",\n    validators: [VALIDATOR_MINLENGTH(5)],\n    errorText: \"Please enter a valid adress.\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    disabled: !formState.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, \"ADD PLLACE\"));\n};\n\nexport default NewPlace;","map":{"version":3,"names":["React","useContext","Button","Input","AuthContext","useForm","useHttpClient","VALIDATOR_MINLENGTH","VALIDATOR_REQUIRE","NewPlace","auth","isLoading","error","sendRequest","clearError","formState","inputHandler","title","value","isValid","description","address","placeSubmitHanlder","event","preventDefault","JSON","stringify","inputs","creator","userId","err"],"sources":["/Users/razvan.bompa/Documents/MERN/client/src/places/pages/NewPlace.js"],"sourcesContent":["import React, { useContext } from 'react';\n\nimport Button from '../../shared/components/FormElements/Button';\nimport Input from '../../shared/components/FormElements/Input';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport {\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_REQUIRE,\n} from '../../shared/util/validators';\nimport './PlaceForm.css';\n\nconst NewPlace = () => {\n  const auth = useContext(AuthContext);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [formState, inputHandler] = useForm(\n    {\n      title: {\n        value: '',\n        isValid: false,\n      },\n      description: {\n        value: '',\n        isValid: false,\n      },\n      address: {\n        value: '',\n        isValid: '',\n      },\n    },\n    false\n  );\n\n  const placeSubmitHanlder = async (event) => {\n    event.preventDefault();\n    try {\n      await sendRequest(\n        'http://localhost:500/api/places',\n        'POST',\n        JSON.stringify({\n          title: formState.inputs.title.value,\n          description: formState.inputs.description.value,\n          address: formState.inputs.address.value,\n          creator: auth.userId,\n        })\n      );\n\n      //Redirect user\n    } catch (err) {}\n  };\n\n  return (\n    <form className=\"place-form\" onSubmit={placeSubmitHanlder}>\n      <Input\n        id=\"title\"\n        type=\"text\"\n        label=\"Title\"\n        element=\"input\"\n        validators={[VALIDATOR_REQUIRE()]}\n        errorText=\"Please enter a valid title.\"\n        onInput={inputHandler}\n      />\n      <Input\n        id=\"description\"\n        label=\"Description\"\n        element=\"textarea\"\n        validators={[VALIDATOR_MINLENGTH(5)]}\n        errorText=\"Please enter a valid description (at least 5 characters).\"\n        onInput={inputHandler}\n      />\n      <Input\n        id=\"address\"\n        label=\"Address\"\n        element=\"input\"\n        validators={[VALIDATOR_MINLENGTH(5)]}\n        errorText=\"Please enter a valid adress.\"\n        onInput={inputHandler}\n      />\n      <Button type=\"submit\" disabled={!formState.isValid}>\n        ADD PLLACE\n      </Button>\n    </form>\n  );\n};\n\nexport default NewPlace;\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,OAAOC,MAAP,MAAmB,6CAAnB;AACA,OAAOC,KAAP,MAAkB,4CAAlB;AACA,SAASC,WAAT,QAA4B,mCAA5B;AACA,SAASC,OAAT,QAAwB,8BAAxB;AACA,SAASC,aAAT,QAA8B,8BAA9B;AACA,SACEC,mBADF,EAEEC,iBAFF,QAGO,8BAHP;AAIA,OAAO,iBAAP;;AAEA,MAAMC,QAAQ,GAAG,MAAM;EACrB,MAAMC,IAAI,GAAGT,UAAU,CAACG,WAAD,CAAvB;EACA,MAAM;IAAEO,SAAF;IAAaC,KAAb;IAAoBC,WAApB;IAAiCC;EAAjC,IAAgDR,aAAa,EAAnE;EACA,MAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BX,OAAO,CACvC;IACEY,KAAK,EAAE;MACLC,KAAK,EAAE,EADF;MAELC,OAAO,EAAE;IAFJ,CADT;IAKEC,WAAW,EAAE;MACXF,KAAK,EAAE,EADI;MAEXC,OAAO,EAAE;IAFE,CALf;IASEE,OAAO,EAAE;MACPH,KAAK,EAAE,EADA;MAEPC,OAAO,EAAE;IAFF;EATX,CADuC,EAevC,KAfuC,CAAzC;;EAkBA,MAAMG,kBAAkB,GAAG,MAAOC,KAAP,IAAiB;IAC1CA,KAAK,CAACC,cAAN;;IACA,IAAI;MACF,MAAMX,WAAW,CACf,iCADe,EAEf,MAFe,EAGfY,IAAI,CAACC,SAAL,CAAe;QACbT,KAAK,EAAEF,SAAS,CAACY,MAAV,CAAiBV,KAAjB,CAAuBC,KADjB;QAEbE,WAAW,EAAEL,SAAS,CAACY,MAAV,CAAiBP,WAAjB,CAA6BF,KAF7B;QAGbG,OAAO,EAAEN,SAAS,CAACY,MAAV,CAAiBN,OAAjB,CAAyBH,KAHrB;QAIbU,OAAO,EAAElB,IAAI,CAACmB;MAJD,CAAf,CAHe,CAAjB,CADE,CAYF;IACD,CAbD,CAaE,OAAOC,GAAP,EAAY,CAAE;EACjB,CAhBD;;EAkBA,oBACE;IAAM,SAAS,EAAC,YAAhB;IAA6B,QAAQ,EAAER,kBAAvC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,KAAD;IACE,EAAE,EAAC,OADL;IAEE,IAAI,EAAC,MAFP;IAGE,KAAK,EAAC,OAHR;IAIE,OAAO,EAAC,OAJV;IAKE,UAAU,EAAE,CAACd,iBAAiB,EAAlB,CALd;IAME,SAAS,EAAC,6BANZ;IAOE,OAAO,EAAEQ,YAPX;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,eAUE,oBAAC,KAAD;IACE,EAAE,EAAC,aADL;IAEE,KAAK,EAAC,aAFR;IAGE,OAAO,EAAC,UAHV;IAIE,UAAU,EAAE,CAACT,mBAAmB,CAAC,CAAD,CAApB,CAJd;IAKE,SAAS,EAAC,2DALZ;IAME,OAAO,EAAES,YANX;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAVF,eAkBE,oBAAC,KAAD;IACE,EAAE,EAAC,SADL;IAEE,KAAK,EAAC,SAFR;IAGE,OAAO,EAAC,OAHV;IAIE,UAAU,EAAE,CAACT,mBAAmB,CAAC,CAAD,CAApB,CAJd;IAKE,SAAS,EAAC,8BALZ;IAME,OAAO,EAAES,YANX;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAlBF,eA0BE,oBAAC,MAAD;IAAQ,IAAI,EAAC,QAAb;IAAsB,QAAQ,EAAE,CAACD,SAAS,CAACI,OAA3C;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBA1BF,CADF;AAgCD,CAvED;;AAyEA,eAAeV,QAAf"},"metadata":{},"sourceType":"module"}