{"ast":null,"code":"var _jsxFileName = \"/Users/razvan.bompa/Documents/MERN/client/src/places/pages/updatePlace.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Button from '../../shared/components/FormElements/Button';\nimport Input from '../../shared/components/FormElements/Input';\nimport { VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport Card from '../../shared/components/UIElements/Card';\nimport './PlaceForm.css';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\n\nconst UpdatePlace = () => {\n  const [loadedPlace, setLoadedPlace] = useState();\n  const placeId = useParams().placeId;\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  } = useHttpClient();\n  const [formState, inputHandler, setFormData] = useForm({\n    title: {\n      value: '',\n      isValid: false\n    },\n    description: {\n      value: '',\n      isValid: false\n    }\n  }, false);\n  useEffect(() => {\n    const fetchPlace = async () => {\n      try {\n        const responseData = await sendRequest(`http://localhost:5000/api/places/${placeId}`);\n        setLoadedPlace(responseData.place);\n        setFormData({\n          title: {\n            value: responseData.place.title,\n            isValid: true\n          },\n          description: {\n            value: responseData.place.description,\n            isValid: true\n          }\n        }, true);\n      } catch (err) {}\n    };\n\n    fetchPlace();\n  }, [placeId, sendRequest, setFormData]);\n\n  const placeUpdateSubmitHandler = event => {\n    event.preventDefault();\n    console.log(formState.inputs);\n  };\n\n  if (!loadedPlace) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }, \"Could not find place!\")));\n  } // if (isLoading) {\n  //   return (\n  //     <div className=\"center\">\n  //       <h2>Loading...</h2>\n  //     </div>\n  //   );\n  // }\n\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ErrorModal, {\n    error: error,\n    onClear: clearError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"place-form\",\n    onSubmit: placeUpdateSubmitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, isLoading && /*#__PURE__*/React.createElement(LoadingSpinner, {\n    asOverlay: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"title\",\n    element: \"input\",\n    type: \"text\",\n    label: \"Title\",\n    validators: [VALIDATOR_REQUIRE],\n    errorText: \"Please enter a valid title\",\n    onInput: inputHandler,\n    initialValue: formState.inputs.title.value,\n    initialValid: formState.inputs.title.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"description\",\n    element: \"textarea\",\n    label: \"Description\",\n    validators: [VALIDATOR_MINLENGTH(5)],\n    errorText: \"Please enter a valid description (min. 5 characters)\",\n    onInput: inputHandler,\n    initialValue: formState.inputs.description.value,\n    initialValid: formState.inputs.description.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    disabled: !formState.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, \"UPDATE PLACE\")));\n};\n\nexport default UpdatePlace;","map":{"version":3,"names":["React","useEffect","useState","useParams","Button","Input","VALIDATOR_MINLENGTH","VALIDATOR_REQUIRE","useForm","useHttpClient","Card","LoadingSpinner","ErrorModal","UpdatePlace","loadedPlace","setLoadedPlace","placeId","isLoading","error","sendRequest","clearError","formState","inputHandler","setFormData","title","value","isValid","description","fetchPlace","responseData","place","err","placeUpdateSubmitHandler","event","preventDefault","console","log","inputs"],"sources":["/Users/razvan.bompa/Documents/MERN/client/src/places/pages/updatePlace.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport Button from '../../shared/components/FormElements/Button';\nimport Input from '../../shared/components/FormElements/Input';\nimport {\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_REQUIRE,\n} from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport Card from '../../shared/components/UIElements/Card';\nimport './PlaceForm.css';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\n\nconst UpdatePlace = () => {\n  const [loadedPlace, setLoadedPlace] = useState();\n  const placeId = useParams().placeId;\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      title: {\n        value: '',\n        isValid: false,\n      },\n      description: {\n        value: '',\n        isValid: false,\n      },\n    },\n    false\n  );\n\n  useEffect(() => {\n    const fetchPlace = async () => {\n      try {\n        const responseData = await sendRequest(\n          `http://localhost:5000/api/places/${placeId}`\n        );\n        setLoadedPlace(responseData.place);\n        setFormData(\n          {\n            title: {\n              value: responseData.place.title,\n              isValid: true,\n            },\n            description: {\n              value: responseData.place.description,\n              isValid: true,\n            },\n          },\n          true\n        );\n      } catch (err) {}\n    };\n\n    fetchPlace();\n  }, [placeId, sendRequest, setFormData]);\n\n  const placeUpdateSubmitHandler = (event) => {\n    event.preventDefault();\n\n    console.log(formState.inputs);\n  };\n\n  if (!loadedPlace) {\n    return (\n      <div className=\"center\">\n        <Card>\n          <h2>Could not find place!</h2>\n        </Card>\n      </div>\n    );\n  }\n\n  // if (isLoading) {\n  //   return (\n  //     <div className=\"center\">\n  //       <h2>Loading...</h2>\n  //     </div>\n  //   );\n  // }\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <form className=\"place-form\" onSubmit={placeUpdateSubmitHandler}>\n        {isLoading && <LoadingSpinner asOverlay />}\n        <Input\n          id=\"title\"\n          element=\"input\"\n          type=\"text\"\n          label=\"Title\"\n          validators={[VALIDATOR_REQUIRE]}\n          errorText=\"Please enter a valid title\"\n          onInput={inputHandler}\n          initialValue={formState.inputs.title.value}\n          initialValid={formState.inputs.title.isValid}\n        />\n        <Input\n          id=\"description\"\n          element=\"textarea\"\n          label=\"Description\"\n          validators={[VALIDATOR_MINLENGTH(5)]}\n          errorText=\"Please enter a valid description (min. 5 characters)\"\n          onInput={inputHandler}\n          initialValue={formState.inputs.description.value}\n          initialValid={formState.inputs.description.isValid}\n        />\n        <Button type=\"submit\" disabled={!formState.isValid}>\n          UPDATE PLACE\n        </Button>\n      </form>\n    </React.Fragment>\n  );\n};\n\nexport default UpdatePlace;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}