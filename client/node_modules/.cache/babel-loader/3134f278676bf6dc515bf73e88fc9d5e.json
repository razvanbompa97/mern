{"ast":null,"code":"import { useState, useCallback, useEffect } from 'react';\nlet logoutTimer;\nexport const useAuth = () => {\n  const [token, setToken] = useState(false);\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\n  const [userId, setUserId] = useState(false);\n  const login = useCallback((uid, token, expirationDate) => {\n    setToken(token);\n    setUserId(uid);\n    const tokenExpirationDate = expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\n    setTokenExpirationDate(tokenExpirationDate);\n    localStorage.setItem('userData', JSON.stringify({\n      userId: uid,\n      token: token,\n      expiration: tokenExpirationDate.toISOString()\n    }));\n  }, []);\n  const logout = useCallback(() => {\n    setToken(null);\n    localStorage.removeItem('userData');\n    setTokenExpirationDate(null);\n    setUserId(null);\n  }, []);\n  useEffect(() => {\n    if (token && tokenExpirationDate) {\n      const remainingTime = tokenExpirationDate.getTime() - new Date().getTime();\n      logoutTimer = setTimeout(logout, remainingTime);\n    } else {\n      clearTimeout(logoutTimer);\n    }\n  }, [token, logout, tokenExpirationDate]);\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem('userData'));\n\n    if (storedData && storedData.token && new Date(storedData.expiration) > new Date()) {\n      login(storedData.userId, storedData.token, new Date(storedData.expiration));\n    }\n  }, [login]);\n  return {\n    token,\n    login,\n    logout,\n    userId\n  };\n};","map":{"version":3,"names":["useState","useCallback","useEffect","logoutTimer","useAuth","token","setToken","tokenExpirationDate","setTokenExpirationDate","userId","setUserId","login","uid","expirationDate","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","logout","removeItem","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem"],"sources":["/Users/razvan.bompa/Documents/MERN/client/src/shared/hooks/auth-hook.js"],"sourcesContent":["import { useState, useCallback, useEffect } from 'react';\n\nlet logoutTimer;\n\nexport const useAuth = () => {\n  const [token, setToken] = useState(false);\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\n  const [userId, setUserId] = useState(false);\n\n  const login = useCallback((uid, token, expirationDate) => {\n    setToken(token);\n    setUserId(uid);\n    const tokenExpirationDate =\n      expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\n    setTokenExpirationDate(tokenExpirationDate);\n    localStorage.setItem(\n      'userData',\n      JSON.stringify({\n        userId: uid,\n        token: token,\n        expiration: tokenExpirationDate.toISOString(),\n      })\n    );\n  }, []);\n\n  const logout = useCallback(() => {\n    setToken(null);\n    localStorage.removeItem('userData');\n    setTokenExpirationDate(null);\n    setUserId(null);\n  }, []);\n\n  useEffect(() => {\n    if (token && tokenExpirationDate) {\n      const remainingTime =\n        tokenExpirationDate.getTime() - new Date().getTime();\n      logoutTimer = setTimeout(logout, remainingTime);\n    } else {\n      clearTimeout(logoutTimer);\n    }\n  }, [token, logout, tokenExpirationDate]);\n\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem('userData'));\n    if (\n      storedData &&\n      storedData.token &&\n      new Date(storedData.expiration) > new Date()\n    ) {\n      login(\n        storedData.userId,\n        storedData.token,\n        new Date(storedData.expiration)\n      );\n    }\n  }, [login]);\n\n  return { token, login, logout, userId };\n};\n"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,WAAnB,EAAgCC,SAAhC,QAAiD,OAAjD;AAEA,IAAIC,WAAJ;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM;EAC3B,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,KAAD,CAAlC;EACA,MAAM,CAACO,mBAAD,EAAsBC,sBAAtB,IAAgDR,QAAQ,EAA9D;EACA,MAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,KAAD,CAApC;EAEA,MAAMW,KAAK,GAAGV,WAAW,CAAC,CAACW,GAAD,EAAMP,KAAN,EAAaQ,cAAb,KAAgC;IACxDP,QAAQ,CAACD,KAAD,CAAR;IACAK,SAAS,CAACE,GAAD,CAAT;IACA,MAAML,mBAAmB,GACvBM,cAAc,IAAI,IAAIC,IAAJ,CAAS,IAAIA,IAAJ,GAAWC,OAAX,KAAuB,OAAO,EAAP,GAAY,EAA5C,CADpB;IAEAP,sBAAsB,CAACD,mBAAD,CAAtB;IACAS,YAAY,CAACC,OAAb,CACE,UADF,EAEEC,IAAI,CAACC,SAAL,CAAe;MACbV,MAAM,EAAEG,GADK;MAEbP,KAAK,EAAEA,KAFM;MAGbe,UAAU,EAAEb,mBAAmB,CAACc,WAApB;IAHC,CAAf,CAFF;EAQD,CAdwB,EActB,EAdsB,CAAzB;EAgBA,MAAMC,MAAM,GAAGrB,WAAW,CAAC,MAAM;IAC/BK,QAAQ,CAAC,IAAD,CAAR;IACAU,YAAY,CAACO,UAAb,CAAwB,UAAxB;IACAf,sBAAsB,CAAC,IAAD,CAAtB;IACAE,SAAS,CAAC,IAAD,CAAT;EACD,CALyB,EAKvB,EALuB,CAA1B;EAOAR,SAAS,CAAC,MAAM;IACd,IAAIG,KAAK,IAAIE,mBAAb,EAAkC;MAChC,MAAMiB,aAAa,GACjBjB,mBAAmB,CAACQ,OAApB,KAAgC,IAAID,IAAJ,GAAWC,OAAX,EADlC;MAEAZ,WAAW,GAAGsB,UAAU,CAACH,MAAD,EAASE,aAAT,CAAxB;IACD,CAJD,MAIO;MACLE,YAAY,CAACvB,WAAD,CAAZ;IACD;EACF,CARQ,EAQN,CAACE,KAAD,EAAQiB,MAAR,EAAgBf,mBAAhB,CARM,CAAT;EAUAL,SAAS,CAAC,MAAM;IACd,MAAMyB,UAAU,GAAGT,IAAI,CAACU,KAAL,CAAWZ,YAAY,CAACa,OAAb,CAAqB,UAArB,CAAX,CAAnB;;IACA,IACEF,UAAU,IACVA,UAAU,CAACtB,KADX,IAEA,IAAIS,IAAJ,CAASa,UAAU,CAACP,UAApB,IAAkC,IAAIN,IAAJ,EAHpC,EAIE;MACAH,KAAK,CACHgB,UAAU,CAAClB,MADR,EAEHkB,UAAU,CAACtB,KAFR,EAGH,IAAIS,IAAJ,CAASa,UAAU,CAACP,UAApB,CAHG,CAAL;IAKD;EACF,CAbQ,EAaN,CAACT,KAAD,CAbM,CAAT;EAeA,OAAO;IAAEN,KAAF;IAASM,KAAT;IAAgBW,MAAhB;IAAwBb;EAAxB,CAAP;AACD,CAtDM"},"metadata":{},"sourceType":"module"}